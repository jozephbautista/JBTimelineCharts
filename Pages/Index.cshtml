@page
@model IndexModel
@{
    ViewData["Title"] = "JB Timeline Charts";
}

<div>
    <script src="~/js/JBTimelineCharts.js"></script>

    <div style="margin-top: 50px;">
        Timeline Chart - Standard
    </div>
    <canvas id="Timeline_Standard" style="border: 1px solid #DDDDDD;"></canvas>

    <div style="margin-top: 50px;">
        Timeline Chart - News Review
    </div>
    <canvas id="Timeline_NewsReview" style="border: 1px solid #DDDDDD;"></canvas>

    <div style="margin-top: 50px;">
        Timeline Chart - Product Lifecycle
    </div>
    <canvas id="Timeline_ProductLifecycle" style="border: 1px solid #DDDDDD;"></canvas>


    <script type="text/javascript">

        // =============================
        // Timeline - Standard
        // =============================
        var canvas_properties = {
            // Canvas type and size
            canvasType: "Standard", // Options: Standard, ProductLifecycle
            canvasId: "Timeline_Standard", // The id of the canvas to apply this property
            canvasWidth: 1200,
            canvasHeight: 650,
            canvasBackgroundColor: "#ffffff",

            // Timeline Bar
            timelineBarX: 50,
            timelineBarY: 600,
            timeLineBarHeight: 30,
            timeLineBarBGColor: "#314E59",
            timeLineBarMonthWidth: 180,
            timeLineBarMonthSpacer: 3,
            timeLineBarMonthFont: "14px Segoe UI",
            timeLineBarMonthColor: "#FFFFFF",
            timeLineBarMonthOffsetY: 20, // to vertically align month text on timeline bar

            // Legend section
            legendSectionX: 850,
            legendSectionY: 10,
            legendSectionWidth: 300,
            legendSectionHeight: 100,
            legendContainerBorderColor: "#888888",
            legendTitleText: "Key",
            starFillColor: "#A0EAF2",
            starBorderColor: "#888888",
            firstPartyEventFontColor: "#314E59",  // first party event
            thridPartyEventFontColor: "#DB1C7C",  // third party event
            releaseMilestoneFontColor: "#0074D7",  // release milestone

            // Data point
            maxDataPointPerMonth: 4,
            datapointTitleFont: "bold 10px Segoe UI",
            datapointTitleColor: "#333333",
            datapointTitleLineHeight: 14,
            datapointDateFont: "10px Segoe UI",
            datapointDateColor: "#0D0D0D",
            datapointTextWrapLimit: "80", // number of pixels before the text wraps

            // Line colors and fills
            datapointLineColor: "#437373",
            datapointCircleBorderColor: "#437373",
            datapointCircleFillColor: "#A0EAF2"
        };

        // Constants
        const months = {
            JAN: 'JANUARY',
            FEB: 'FEBRUARY',
            MAR: 'MARCH',
            APR: 'APRIL',
            MAY: 'MAY',
            JUN: 'JUNE',
            JUL: 'JULY',
            AUG: 'AUGUST',
            SEP: 'SEPTEMBER',
            OCT: 'OCTOBER',
            NOV: 'NOVEMBER',
            DEC: 'DECEMBER'
        };

        const eventtypes = {
            KEYMOMENT: 'Key Moment',
            RELEASEMILESTONE: 'Release Milestone',
            FIRSTPARTYEVENT: '1st Party Event',
            THIRDPARTYEVENT: '3rd Party Event'
        };

        const badgetypes = {
            NONE: 'None',
            KEYMOMENT: 'Key Moment',
            RELEASEMILESTONE: 'Release Milestone',
            ALL: 'All'
        };

        // Timeline data object - Standard
        function TimelineData_Standard(tile, month, eventdaterange, eventtype, badgetype) {
            this.title = tile;
            this.month = month;
            this.eventdaterange = eventdaterange;
            this.eventtype = eventtype;
            this.badgetype = badgetype
        };

        // Expectation: Months being passed should be 6 months only. This will be the actual text that is going to be displayed on the chart.
        var monthsArray = [months.MAY, months.JUN, months.JUL, months.AUG, months.SEP, months.OCT];

        // ===================
        // Expectation: Data being passed must be sorted already from oldest to newest. The month property should also be uppercase.
        var timelineDataList_Standard = [];
        timelineDataList_Standard.push(new TimelineData_Standard('Dev Summit', months.MAY, 'May 6', eventtypes.FIRSTPARTYEVENT, badgetypes.NONE));
        timelineDataList_Standard.push(new TimelineData_Standard('Dev Days', months.MAY, 'May 16-17', eventtypes.FIRSTPARTYEVENT, badgetypes.ALL));
        timelineDataList_Standard.push(new TimelineData_Standard('Dev Focus', months.MAY, 'May 18-20', eventtypes.THIRDPARTYEVENT, badgetypes.NONE));
        timelineDataList_Standard.push(new TimelineData_Standard('Dev Builds', months.MAY, 'May 19-20', eventtypes.THIRDPARTYEVENT, badgetypes.KEYMOMENT));
        timelineDataList_Standard.push(new TimelineData_Standard('Business Launch Event', months.JUN, 'June 3 & 10-11', eventtypes.FIRSTPARTYEVENT, badgetypes.RELEASEMILESTONE));
        timelineDataList_Standard.push(new TimelineData_Standard('Marketing Event', months.JUL, 'July 21-22', eventtypes.FIRSTPARTYEVENT, badgetypes.NONE));
        timelineDataList_Standard.push(new TimelineData_Standard('Sales Event', months.JUL, 'July 22-23', eventtypes.FIRSTPARTYEVENT, badgetypes.NONE));
        timelineDataList_Standard.push(new TimelineData_Standard('Business Solutions Conference', months.AUG, 'Aug 6', eventtypes.THIRDPARTYEVENT, badgetypes.RELEASEMILESTONE));
        timelineDataList_Standard.push(new TimelineData_Standard('Business Practices Event', months.SEP, 'Sep 22-23', eventtypes.FIRSTPARTYEVENT, badgetypes.NONE));
        timelineDataList_Standard.push(new TimelineData_Standard('Business Applications Launch Event', months.OCT, 'Oct 1', eventtypes.FIRSTPARTYEVENT, badgetypes.ALL));
        timelineDataList_Standard.push(new TimelineData_Standard('Direct Sales Event', months.OCT, 'Oct 7-9', eventtypes.THIRDPARTYEVENT, badgetypes.ALL));

        renderTimelineChart(canvas_properties, timelineDataList_Standard);




        // =============================
        // Timeline - News Review
        // =============================
        var canvas_properties = {
            // Canvas type and size
            canvasType: "NewsReview", // Options: Standard, ProductLifecycle
            canvasId: "Timeline_NewsReview", // The id of the canvas to apply this property
            canvasWidth: 1200,
            canvasHeight: 820,
            canvasBackgroundColor: "#ffffff",

            // Timeline Bar
            timelineBarX: 50,
            timelineBarY: 425,
            timeLineBarHeight: 20,
            timeLineBarBGColor: "#314E59",
            timeLineBarMonthWidth: 180,
            timeLineBarMonthSpacer: 3,
            timeLineBarMonthFont: "14px Segoe UI",
            timeLineBarMonthColor: "#FFFFFF",
            timeLineBarMonthOffsetY: 15, // to vertically align month text on timeline bar

            // Legend section
            legendSectionX: 850,
            legendSectionY: 10,
            legendSectionWidth: 300,
            legendSectionHeight: 100,
            legendContainerBorderColor: "#888888",
            legendTitleText: "Key",
            starFillColor: "#A0EAF2",
            starBorderColor: "#888888",
            firstPartyEventFontColor: "#314E59",  // first party event
            thridPartyEventFontColor: "#DB1C7C",  // third party event
            prBeatFontColor: "#0074D7",  // pr beat

            // Data point
            maxDataPointPerMonth: 8,
            datapointTitleFont: "bold 10px Segoe UI",
            datapointTitleColor: "#333333",
            datapointTitleLineHeight: 14,
            datapointDateFont: "10px Segoe UI",
            datapointDateColor: "#0D0D0D",
            datapointTextWrapLimit: "80", // number of pixels before the text wraps

            // Line colors and fills
            datapointLineColor: "#437373",
            datapointCircleBorderColor: "#437373",
            datapointCircleFillColor: "#A0EAF2"
        };

        // Constants - It's already used on above chart, so no need to declare it again here.
        //const months = {
        //    JAN: 'JANUARY',
        //    FEB: 'FEBRUARY',
        //    MAR: 'MARCH',
        //    APR: 'APRIL',
        //    MAY: 'MAY',
        //    JUN: 'JUNE',
        //    JUL: 'JULY',
        //    AUG: 'AUGUST',
        //    SEP: 'SEPTEMBER',
        //    OCT: 'OCTOBER',
        //    NOV: 'NOVEMBER',
        //    DEC: 'DECEMBER'
        //};

        const eventtypes_NewsReview = {
            KEYMOMENT: 'Key Moment',  // only used for legend section
            PRBEAT: 'PR Beat',        // only used for legend section
            FIRSTPARTYEVENT: '1st Party Event',
            THIRDPARTYEVENT: '3rd Party Event'
        };

        const badgetypes_NewsReview = {
            NONE: 'None',
            KEYMOMENT: 'Key Moment',
            PRBEAT: 'PR Beat',
            ALL: 'All'
        };

        // Timeline data object - Standard
        function TimelineData_NewsReview(tile, month, eventdaterange, eventtype, badgetype) {
            this.title = tile;
            this.month = month;
            this.eventdaterange = eventdaterange;
            this.eventtype = eventtype;
            this.badgetype = badgetype
        };

        // Expectation: Months being passed should be 6 months only. This will be the actual text that is going to be displayed on the chart.
        var monthsArray = [months.MAY, months.JUN, months.JUL, months.AUG, months.SEP, months.OCT];

        // ===================
        // Expectation: Data being passed must be sorted already from oldest to newest. The month property should also be uppercase.
        var timelineDataList_NewsReview = [];
        timelineDataList_NewsReview.push(new TimelineData_NewsReview('Dev Summit - Tech launch 2020', months.MAY, 'May 6', eventtypes_NewsReview.FIRSTPARTYEVENT, badgetypes_NewsReview.KEYMOMENT));
        timelineDataList_NewsReview.push(new TimelineData_NewsReview('Dev Days', months.MAY, 'May 16-17', eventtypes_NewsReview.FIRSTPARTYEVENT, badgetypes_NewsReview.ALL));
        timelineDataList_NewsReview.push(new TimelineData_NewsReview('Dev Focus', months.MAY, 'May 18-20', eventtypes_NewsReview.THIRDPARTYEVENT, badgetypes_NewsReview.ALL));
        timelineDataList_NewsReview.push(new TimelineData_NewsReview('Dev Builds', months.MAY, 'May 19-20', eventtypes_NewsReview.THIRDPARTYEVENT, badgetypes_NewsReview.NONE));
        timelineDataList_NewsReview.push(new TimelineData_NewsReview('Dev Test 1', months.MAY, 'May 21-22', eventtypes_NewsReview.FIRSTPARTYEVENT, badgetypes_NewsReview.NONE));
        timelineDataList_NewsReview.push(new TimelineData_NewsReview('Dev Test 2', months.MAY, 'May 22-23', eventtypes_NewsReview.FIRSTPARTYEVENT, badgetypes_NewsReview.NONE));
        timelineDataList_NewsReview.push(new TimelineData_NewsReview('Dev Test 3', months.MAY, 'May 23-24', eventtypes_NewsReview.FIRSTPARTYEVENT, badgetypes_NewsReview.PRBEAT));
        timelineDataList_NewsReview.push(new TimelineData_NewsReview('Dev Test 4', months.MAY, 'May 24-25', eventtypes_NewsReview.FIRSTPARTYEVENT, badgetypes_NewsReview.ALL));

        timelineDataList_NewsReview.push(new TimelineData_NewsReview('Business Launch Event', months.JUN, 'June 3 & 10-11', eventtypes_NewsReview.FIRSTPARTYEVENT, badgetypes_NewsReview.ALL));
        timelineDataList_NewsReview.push(new TimelineData_NewsReview('Marketing Event', months.JUL, 'July 21-22 & 24-25', eventtypes_NewsReview.FIRSTPARTYEVENT, badgetypes_NewsReview.KEYMOMENT));
        timelineDataList_NewsReview.push(new TimelineData_NewsReview('Sales Event', months.JUL, 'July 22-23', eventtypes_NewsReview.FIRSTPARTYEVENT, badgetypes_NewsReview.PRBEAT));
        timelineDataList_NewsReview.push(new TimelineData_NewsReview('Business Solutions Conference', months.AUG, 'Aug 6', eventtypes_NewsReview.FIRSTPARTYEVENT, badgetypes_NewsReview.NONE));
        timelineDataList_NewsReview.push(new TimelineData_NewsReview('Business Practices Event', months.SEP, 'Sep 22-23', eventtypes_NewsReview.FIRSTPARTYEVENT, badgetypes_NewsReview.NONE));
        timelineDataList_NewsReview.push(new TimelineData_NewsReview('Business Applications Launch Event', months.OCT, 'Oct 1', eventtypes_NewsReview.FIRSTPARTYEVENT, badgetypes_NewsReview.PRBEAT));
        timelineDataList_NewsReview.push(new TimelineData_NewsReview('Direct Sales Event', months.OCT, 'Oct 7-9', eventtypes_NewsReview.THIRDPARTYEVENT, badgetypes_NewsReview.PRBEAT));

        renderTimelineChart(canvas_properties, timelineDataList_NewsReview);




        // =============================
        // Timeline - Product Lifecycle
        // =============================
        var canvas_properties = {
            // Canvas type and size
            canvasType: "ProductLifecycle",  // Options: Standard, ProductLifecycle
            canvasId: "Timeline_ProductLifecycle", // The id of the canvas to apply this property
            canvasWidth: 1200,
            canvasHeight: 650,
            canvasBackgroundColor: "#ffffff",

            // Timeline Bar
            timelineBarX: 50,
            timelineBarY: 300,
            timelineBarWidth: 1080,
            timeLineBarHeight: 10,
            timeLineBarBGColor: "#314E59",

            // Data point
            datapointTitleFont: "bold 12px Segoe UI",
            datapointTitleColor: "#333333",
            datapointTitleLineHeight: 14,
            datapointDateFont: "10px Segoe UI",
            datapointDateColor: "#0D0D0D",
            datapointTextWrapLimit: "80", // number of pixels before the text wraps

            // Line colors and fills
            datapointLineColor: "#437373",
            datapointCircleBorderColor: "#437373",
            datapointCircleFillColor: "#A0EAF2"
        };

        // Timeline data object - Product Lifecycle
        function TimelineData_ProductLifecycle(tile, eventdaterange, innovations) {
            this.title = tile;
            this.eventdaterange = eventdaterange;
            this.innovations = innovations;
        };

        // Expectation: Data being passed must be sorted already from oldest to newest.
        var timelineDataList_ProductLifecycle = [];
        timelineDataList_ProductLifecycle.push(new TimelineData_ProductLifecycle('CPU 2019', 'mm/dd/yyyy to mm/dd/yyyy', new Array('Ryzen 3000', 'Intel 9th Gen')));
        timelineDataList_ProductLifecycle.push(new TimelineData_ProductLifecycle('GPU 2019', 'mm/dd/yyyy to mm/dd/yyyy', new Array('RTX 2060', 'RTX 2070', 'RTX 2080', 'RTX 2080 TI')));
        timelineDataList_ProductLifecycle.push(new TimelineData_ProductLifecycle('RAM 2019', 'mm/dd/yyyy', new Array('AData', 'Ballistix', 'Corsair', 'Crucial', 'Samsung')));
        timelineDataList_ProductLifecycle.push(new TimelineData_ProductLifecycle('MoBo 2019', 'mm/dd/yyyy', new Array('ASRock', 'ASUS', 'Gigabyte', 'MSI')));
        timelineDataList_ProductLifecycle.push(new TimelineData_ProductLifecycle('CPU 2020', 'mm/dd/yyyy', new Array('Ryzen 5000', 'Intel 10th Gen')));
        timelineDataList_ProductLifecycle.push(new TimelineData_ProductLifecycle('GPU 2020', 'mm/dd/yyyy', new Array('RTX 3060 TI', 'RTX 3070', 'RTX 3080', 'RTX 3090', 'RX 6800', 'RX 6800 XT', 'RX 6900 XT')));

        renderTimelineChart(canvas_properties, timelineDataList_ProductLifecycle);
    </script>

</div>


